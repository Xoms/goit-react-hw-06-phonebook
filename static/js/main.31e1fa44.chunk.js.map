{"version":3,"sources":["redux/phonebook/contacts/actionTypes.js","redux/phonebook/contacts/recordActions.js","redux/phonebook/contacts/recordReducer.js","redux/phonebook/filter/actionTypes.js","redux/phonebook/filter/filterActions.js","redux/phonebook/filter/filterReducer.js","redux/phonebook/phonebookReducer.js","redux/store.js","components/shared/Title/Title.styles.js","components/shared/Title/Title.jsx","components/shared/Title/index.js","components/shared/Container/Container.styles.js","components/shared/Container/index.js","components/shared/Container/Container.jsx","components/shared/ErrorMessage/ErrorMessage.styles.js","components/shared/ErrorMessage/index.js","components/shared/ErrorMessage/ErrorMessage.jsx","components/shared/Button/Button.styles.js","components/shared/Button/Button.jsx","components/shared/Button/index.js","components/PhonesForm/PhonesForm.jsx","components/PhonesForm/index.js","components/ContactsList/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsListItem/index.js","components/ContactsList/index.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/Filter/index.js","App.jsx","reportWebVitals.js","index.js"],"names":["types","ADD_CONTACT","DEL_CONTACT","actions","addContact","createAction","delContact","initialState","JSON","parse","localStorage","getItem","id","name","number","recordReducer","createReducer","recordActions","state","action","newContacts","payload","setItem","stringify","filter","FILTER_CHANGE","filterChange","filterReducer","filterActions","combineReducers","items","store","configureStore","reducer","contacts","phonebookReducer","StyledTitle","styled","h2","Title","title","className","defaultProps","StyledContainer","div","Container","children","Err","ErrorMessage","content","onClick","Btn","button","Button","props","type","handleClick","isExist","PhonesForm","changeHandler","target","setState","value","submitHandler","e","preventDefault","isContactExists","showErrMsg","newRecord","makeRecord","onContactAdd","hideErrMsg","currName","this","some","setTimeout","uuid","onSubmit","CSSTransition","in","classNames","appear","unmountOnExit","timeout","htmlFor","onChange","Component","mapDispatchToProps","connect","ContactsListItem","onDelete","ownProps","item","find","el","dispatch","ContactsList","lowerCaseFilter","toLowerCase","includes","TransitionGroup","component","map","onFilterChange","Filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31e1fa44.chunk.js","sourcesContent":["const ADD_CONTACT = 'record/add';\r\nconst DEL_CONTACT = 'record/del';\r\n\r\nconst types = {ADD_CONTACT, DEL_CONTACT}\r\nexport default types","//без тулзов\r\n// import types from './actionTypes';\r\n\r\n// const addContact = (contact={}) => ({\r\n//     type: types.ADD_CONTACT,\r\n//     payload: {\r\n//         contact\r\n//     }\r\n// })\r\n\r\n// const delContact = (id='') => ({\r\n//     type: types.DEL_CONTACT,\r\n//     payload: {\r\n//         id\r\n//     }\r\n// })\r\n\r\n// const actions = { addContact, delContact }\r\n// export default actions\r\n\r\n//с тулзами\r\nimport types from './actionTypes';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction(types.ADD_CONTACT);\r\nconst delContact = createAction(types.DEL_CONTACT);\r\n\r\nconst actions = { addContact, delContact }\r\nexport default actions","// import types from './actionTypes';\r\n\r\n// const initVal = JSON.parse(localStorage.getItem('contacts')) || [\r\n//     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n//     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n//     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n//     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\r\n//   ];\r\n\r\n// const recordReducer = (state = initVal, {type, payload} ) => {\r\n//     switch(type) {\r\n//         case types.ADD_CONTACT:\r\n//             return [...state, payload.contact]\r\n\r\n//         case types.DEL_CONTACT: \r\n//             return state.filter( ({id}) => id!==payload.id )\r\n//         default: \r\n//             return state;        \r\n//     }\r\n// }\r\n\r\n// export default recordReducer\r\n\r\n//с тулзами\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport recordActions from './recordActions';\r\n\r\nconst initialState = JSON.parse(localStorage.getItem('contacts')) || [\r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\r\n  ];\r\n\r\n\r\nconst onAddContact = (state, action) => {\r\n    const newContacts = [...state, action.payload]\r\n    localStorage.setItem('contacts', JSON.stringify(newContacts))\r\n    return newContacts\r\n};\r\nconst  onDelContact = (state, action) =>{\r\n    const newContacts =  state.filter( ({id}) => id !== action.payload )\r\n    localStorage.setItem('contacts', JSON.stringify(newContacts))\r\n    return newContacts\r\n};\r\n\r\n\r\nconst recordReducer = createReducer(initialState, {\r\n    [recordActions.addContact]: onAddContact,\r\n    [recordActions.delContact]: onDelContact,\r\n})  \r\n\r\n\r\nexport default recordReducer","const FILTER_CHANGE  = 'filter/change';\r\n\r\n\r\nconst types = {FILTER_CHANGE, }\r\nexport default types","// import types from './actionTypes';\r\n\r\n// const filterChange = (value='') => ({    //когда с функцией - action creator, просто объект - action\r\n//     type: types.FILTER_CHANGE,\r\n//     payload: {     // как хочу - так и называю, внутри тоже что угодно\r\n//         value\r\n//     }\r\n// })\r\n\r\n// const filterActions = {filterChange, };\r\n// export default filterActions\r\n\r\n\r\n//with tools\r\nimport types from './actionTypes';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterChange = createAction(types.FILTER_CHANGE);\r\n\r\nconst actions = { filterChange }\r\nexport default actions","// import types from './actionTypes';\r\n\r\n// const filterReducer = (state = '', {type, payload} ) => {\r\n//     switch(type) {\r\n//         case types.FILTER_CHANGE:\r\n//             return payload.value;\r\n\r\n//         default: \r\n//             return state;        \r\n//     }\r\n// }\r\n\r\n// export default filterReducer; \r\n\r\n//с тулзами\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport filterActions from './filterActions';\r\n\r\nconst filterReducer = createReducer('', {\r\n    [filterActions.filterChange]: (state, action) => action.payload,\r\n})\r\n\r\nexport default filterReducer; ","import { combineReducers } from 'redux';\r\nimport recordReducer from './contacts/recordReducer';\r\nimport filterReducer from './filter/filterReducer';\r\n\r\nexport default combineReducers({\r\n        items: recordReducer,\r\n        filter: filterReducer\r\n    })","//import {createStore, combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './phonebook/phonebookReducer';\r\n\r\n//без тулзов \r\n// const rootReducer = combineReducers({\r\n//     contacts: phonebookReducer,\r\n// })\r\n//\r\n// const store = createStore(rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\n// с тулзами \r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n  }\r\n})\r\n\r\nexport default store;","import styled from 'styled-components';\r\n\r\nexport const StyledTitle = styled.h2`\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 30px;\r\n    font-weight: 900px;\r\n    margin-bottom: 30px;\r\n    color: #3f51b5;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledTitle } from './Title.styles';\r\n\r\nconst Title = ({title}) => (\r\n  <StyledTitle className=\"title\">\r\n    {title}\r\n  </StyledTitle>\r\n);\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nTitle.defaultProps = {\r\n  // bla: 'test',\r\n};\r\n\r\nexport default Title;\r\n","import Title from './Title';\r\n\r\nexport default Title;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledContainer = styled.div`\r\n    width: 1200px;\r\n    padding: 15px 15px;\r\n    margin: 0 auto;\r\n\r\n    @media sreen and (min-width: 450px){\r\n        width: 450px;\r\n    }\r\n\r\n    @media sreen and (min-width: 768px){\r\n        width: 768px;\r\n    }\r\n\r\n    @media sreen and (min-width: 1200px){\r\n        width: 1200px;\r\n    }\r\n`;\r\n","import Container from './Container';\r\n\r\nexport default Container;\r\n","import React from 'react';\r\n\r\nimport { StyledContainer } from './Container.styles';\r\n\r\nconst Container = ({children}) => (\r\n  <StyledContainer>\r\n    {children}\r\n  </StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\n\nexport const Err = styled.div`\n    position: absolute;\n    width: 200px;\n    min-height: 40px;\n    top: 30px;\n    right: 500px;\n    background-color: orangered;\n    color: white;\n    border-radius: 5px;\n    padding: 10px;\n`;\n","import ErrorMessage from './ErrorMessage';\n\nexport default ErrorMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Err } from './ErrorMessage.styles';\n\nconst ErrorMessage = ({content, onClick}) => (\n  <Err className=\"err-msg\" onClick={onClick}>\n    {content}\n  </Err>\n);\n\nErrorMessage.propTypes = {\n  content: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default ErrorMessage;\n","import styled from 'styled-components';\r\n\r\nexport const Btn = styled.button`\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    background-color: #3f51b5;\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    text-align: center;\r\n    display: inline-block;\r\n    color: #fff;\r\n    border: 0;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-style: normal;\r\n    font-weight: 500;    \r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n    &:hover, &:focus {\r\n        background-color: #303f9f;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Btn } from './Button.styles';\r\n\r\nconst Button = (props) => {\r\n  const { type, children, onClick, className } = props\r\n  return (\r\n  <Btn type={type}  onClick={onClick} className={className}> \r\n    {children}\r\n  </Btn>\r\n)};\r\n\r\nButton.propTypes = {\r\n  caption: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n  type: PropTypes.string,\r\n  className: PropTypes.string\r\n};\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  className: '',\r\n  handleClick: () => {}\r\n};\r\n\r\nexport default Button;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {v4 as uuid} from 'uuid';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { connect } from 'react-redux';\nimport recordActions from \"../../redux/phonebook/contacts/recordActions\";\n\nimport ErrMsg from '../shared/ErrorMessage';\nimport Button from \"../shared/Button\";\n\nimport './PhonesForm.styles.scss';\n\nconst initialState = {\n  name: '',\n  number: '',\n  isExist: false\n}\n\nclass PhonesForm extends Component  {\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string\n    })).isRequired,\n    onContactAdd: PropTypes.func.isRequired,\n  };\n\n  state = { ...initialState }\n\n  changeHandler = ({target}) => {\n    this.setState({ [target.name]: target.value })\n  }\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    \n    if (this.isContactExists(this.state.name)){\n      this.showErrMsg();\n      return;\n    }\n\n    const newRecord = this.makeRecord()\n    this.props.onContactAdd(newRecord);\n    this.setState({ ...initialState })\n  }\n\n\n  isContactExists(currName){\n    return (this.props.contacts.some( ({name}) => name === currName));\n  }\n\n  showErrMsg() {\n    this.setState({ isExist: true });\n    setTimeout(() => this.hideErrMsg(), 2000);\n  }\n\n  hideErrMsg = ()=> {\n    this.setState({ isExist: false });\n  }\n\n  makeRecord(){\n    const id = uuid();\n    const {name, number} = this.state;\n    return {id, name, number}\n  }\n\n  render(){\n    const {name, number, isExist} = this.state\n    return (\n      <form className=\"contacts-form\" onSubmit={this.submitHandler}>\n\n        <CSSTransition \n          in={isExist} \n          classNames=\"err\" \n          appear={true}\n          unmountOnExit \n          timeout={250}\n        >\n          <ErrMsg content=\"This person is already in your contacts list\" onClick={this.hideErrMsg}/>\n        </CSSTransition>\n\n        <div className=\"contacts-form__group\">\n          <label className=\"contacts-form__label\" htmlFor=\"contactName\" >Name</label>\n          <input className=\"contacts-form__input\" \n            onChange={this.changeHandler} \n            id=\"contactName\"\n            name=\"name\"\n            value={name}/>\n        </div>\n\n        <div className=\"contacts-form__group\">\n          <label className=\"contacts-form__label\" htmlFor=\"contactNumber\">Number</label>\n          <input \n            className=\"contacts-form__input\" \n            onChange={this.changeHandler} \n            id=\"contactNumber\"\n            name=\"number\"\n            value={number}/>\n        </div>\n\n        <Button type=\"submit\" className=\"contacts-form__submit-btn\">Add contact</Button>       \n      </form>\n    )\n  }  \n};\n\n////////////REDUX////////////\nconst mapStateToProps = state => {\n  return { \n    contacts: state.contacts.items,\n  }\n}\n\nconst mapDispatchToProps = { \n  onContactAdd: recordActions.addContact,\n}\n// по факту происходит такое\n// const mapDispatchToProps = dispatch => { \n//   return {\n//     onContactAdd: (val) => dispatch(recordActions.addContact(val))\n//   }\n// }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonesForm);","import PhonesForm from './PhonesForm';\n\nexport default PhonesForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from \"react-redux\";\nimport recordActions from \"../../../redux/phonebook/contacts/recordActions\";\n\nimport Button from '../../shared/Button';\nimport './ContactsListItem.scss';\n\n\nconst ContactsListItem = ({name, number, onDelete}) => (\n  \n    <li className=\"contacts-list__item\">\n      <span className=\"contacts-list__item-text\">{name}: {number}</span>\n      <Button type=\"button\" onClick={onDelete} className=\"contacts-list__item-btn\">X</Button>\n    </li>\n\n);\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string, //? хз при первом удалении куда-то деваются, потом нормально О_о \n  number: PropTypes.string, //? хз при первом удалении куда-то деваются, потом нормально О_о \n  onDelete:  PropTypes.func.isRequired\n};\nContactsListItem.defaultProps = {\n  name: '',\n  number: '',\n}\n\n//Чего нельзя было сразу из листа взять??\nconst mapStateToProps = (state, ownProps) => {\n    const item = state.contacts.items.find( el => el.id === ownProps.id)\n    return {\n      ...item\n    } \n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onDelete: () => dispatch(recordActions.delContact(ownProps.id))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsListItem);","import ContactsListItem from './ContactsListItem';\n\nexport default ContactsListItem;\n","import ContactsList from './ContactsList';\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport { connect } from 'react-redux';\n\nimport ContactsListItem from './ContactsListItem';\nimport  './ContactsList.scss';\n\n\nconst ContactsList = ({contacts}) => (\n  <TransitionGroup component=\"ul\" className=\"contacts-list\">\n    {contacts.map( ({id}) => {\n      return (\n        <CSSTransition key={id} timeout={250} classNames=\"contacts-items\">\n          <ContactsListItem  id={id}/>\n        </CSSTransition>\n      )\n    })}\n  </TransitionGroup>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.exact({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string\n  })).isRequired,\n};\n\n\n//////REDUX //////\nconst mapStateToProps = state => {\n  const {items, filter} = state.contacts;\n  const lowerCaseFilter = filter.toLowerCase();\n  const visibleTasks = items.filter( ({name}) => name.toLowerCase().includes(lowerCaseFilter) );\n  return { \n    contacts: visibleTasks,\n   }\n}\n\nexport default connect(mapStateToProps)(ContactsList) ;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport filterActions from \"../../redux/phonebook/filter/filterActions\";\n\nimport './Filter.scss';\n\nconst Filter = ({filter, onFilterChange}) => (\n  <div className=\"filter\">\n    <label htmlFor=\"filterInput\" className=\"filter__label\">Find contacts by name</label>\n    <input \n      type=\"text\" \n      id=\"filterInput\" \n      onChange={(e)=> onFilterChange(e.target.value)}\n      value={filter}\n      className=\"filter__input\"/>\n  </div>\n);\n\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\n\nconst mapStateToProps = state => {\n  return { \n    filter: state.contacts.filter\n   }\n}\n\nconst mapDispatchToProps = { \n  onFilterChange: filterActions.filterChange\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import Filter from './Filter';\n\nexport default Filter;\n","import React  from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Title from './components/shared/Title';\r\nimport Container from './components/shared/Container';\r\nimport PhonesForm from './components/PhonesForm';\r\nimport ContactsList from './components/ContactsList';\r\nimport Filter from './components/Filter';\r\n\r\nimport './App.scss';\r\n\r\nconst App = () => {   \r\n\r\n    return (\r\n      <Container className=\"container phonebook\">\r\n        <CSSTransition in={true} \r\n          appear={true}\r\n          classNames=\"fade\" \r\n          unmountOnExit \r\n          timeout={500}\r\n        >\r\n          <Title title=\"Phonebook\"/>\r\n        </CSSTransition>\r\n\r\n        <PhonesForm/>\r\n        <Title title=\"Contacts\" className=\"main-title\"/>\r\n        <Filter/>\r\n        <ContactsList/>\r\n\r\n      </Container>\r\n    );  \r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport  store  from './redux/store';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}